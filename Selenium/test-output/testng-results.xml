<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-25T18:44:28 IST" name="Default suite" finished-at="2022-07-25T18:45:33 IST" duration-ms="65239">
    <groups>
    </groups>
    <test started-at="2022-07-25T18:44:28 IST" name="Default test" finished-at="2022-07-25T18:45:33 IST" duration-ms="65239">
      <class name="executetests.LeadProcess">
        <test-method is-config="true" signature="getDriver()[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:44:28 IST" name="getDriver" finished-at="2022-07-25T18:44:29 IST" duration-ms="1307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:44:29 IST" name="beforeMethod" finished-at="2022-07-25T18:44:29 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void executetests.LeadProcess.loginToSalesforce() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginToSalesforce()[pri:1, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:44:29 IST" name="loginToSalesforce" finished-at="2022-07-25T18:44:52 IST" duration-ms="22669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToSalesforce -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:44:52 IST" name="afterMethod" finished-at="2022-07-25T18:44:52 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginToSalesforce status=SUCCESS method=LeadProcess.loginToSalesforce()[pri:1, instance:executetests.LeadProcess@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:44:53 IST" name="beforeMethod" finished-at="2022-07-25T18:44:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void executetests.LeadProcess.createNewLead(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createNewLead(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:44:53 IST" name="createNewLead" data-provider="LeadData" finished-at="2022-07-25T18:45:29 IST" duration-ms="36091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Advertisement]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Automation]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Springernature]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[autotest@gtest.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Corporate]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Automotive]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Inbound]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Engagement]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewLead -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:45:29 IST" name="afterMethod" finished-at="2022-07-25T18:45:29 IST" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createNewLead status=SUCCESS method=LeadProcess.createNewLead(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:executetests.LeadProcess@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="acceptLead()[pri:3, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:45:29 IST" name="acceptLead" finished-at="2022-07-25T18:45:32 IST" duration-ms="3152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptLead -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:45:29 IST" name="beforeMethod" finished-at="2022-07-25T18:45:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void executetests.LeadProcess.acceptLead() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:45:32 IST" name="afterMethod" finished-at="2022-07-25T18:45:32 IST" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=acceptLead status=SUCCESS method=LeadProcess.acceptLead()[pri:3, instance:executetests.LeadProcess@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="endClass()[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:45:32 IST" name="endClass" finished-at="2022-07-25T18:45:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endClass -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:executetests.LeadProcess@52066604]" started-at="2022-07-25T18:45:32 IST" name="endTest" finished-at="2022-07-25T18:45:33 IST" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- executetests.LeadProcess -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
